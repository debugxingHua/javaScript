JavaScript 是脚本语言
JavaScript 是一种轻量级的编程语言。
JavaScript 是可插入 HTML 页面的编程代码。
JavaScript 插入 HTML 页面后，可由所有的现代浏览器执行。\

注释
    单行注释以 // 开头。多行注释以 /* 开始，以 */ 结尾。
变量
    变量可以使用短名称（比如 x 和 y），也可以使用描述性更好的名称（比如 age, sum, totalvolume）。
    变量必须以字母开头
    变量也能以 $ 和 _ 符号开头（不过我们不推荐这么做）
    变量名称对大小写敏感（y 和 Y 是不同的变量）
    提示：JavaScript 语句和 JavaScript 变量都对大小写敏感。

JavaScript 数据类型
    字符串、数字、布尔、数组、对象、Null、Undefined

JavaScript 对象
    JavaScript 中的所有事物都是对象：字符串、数字、数组、日期，等等。对象是拥有属性和方法的数据。
    创建对象可以用new+构造，也可以用字面量;
    访问对象属性的语法是：objectName.propertyName

JavaScript 函数
    函数是由事件驱动的或者当它被调用时执行的可重复使用的代码块。

JavaScript 运算符
    JavaScript 算术运算符
    算术运算符用于执行变量与/或值之间的算术运算。
    给定 y=5，下面的表格解释了这些算术运算符：
    运算符	描述	例子	结果
    +	加	x=y+2	x=7
    -	减	x=y-2	x=3
    *	乘	x=y*2	x=10
    /	除	x=y/2	x=2.5
    %	求余数 (保留整数)	x=y%2	x=1
    ++	累加	x=++y	x=6
    --	递减	x=--y	x=4
    JavaScript 赋值运算符
    赋值运算符用于给 JavaScript 变量赋值。
    给定 x=10 和 y=5，下面的表格解释了赋值运算符：
    运算符	例子	等价于	结果
    =	x=y	 	x=5
    +=	x+=y	x=x+y	x=15
    -=	x-=y	x=x-y	x=5
    *=	x*=y	x=x*y	x=50
    /=	x/=y	x=x/y	x=2
    %=	x%=y	x=x%y	x=0
    用于字符串的 + 运算符
    + 运算符用于把文本值或字符串变量加起来（连接起来）。

JavaScript 比较和逻辑运算符
    比较和逻辑运算符用于测试 true 或 false。
    比较运算符
    比较运算符在逻辑语句中使用，以测定变量或值是否相等。
    给定 x=5，下面的表格解释了比较运算符：
    运算符	描述	例子
    ==	等于	x==8 为 false
    ===	全等（值和类型）	x===5 为 true；x==="5" 为 false
    !=	不等于	x!=8 为 true
    >	大于	x>8 为 false
    <	小于	x<8 为 true
    >=	大于或等于	x>=8 为 false
    <=	小于或等于	x<=8 为 true
    逻辑运算符
    逻辑运算符用于测定变量或值之间的逻辑。
    给定 x=6 以及 y=3，下表解释了逻辑运算符：
    运算符	描述	例子
    &&	and	(x < 10 && y > 1) 为 true
    ||	or	(x==5 || y==5) 为 false
    !	not	!(x==y) 为 true
    条件运算符
    JavaScript 还包含了基于某些条件对变量进行赋值的条件运算符。
    语法
    variablename=(condition)?value1:value2

JavaScript 分支结构-条件语句
    if 语句 - 只有当指定条件为 true 时，使用该语句来执行代码
    if...else 语句 - 当条件为 true 时执行代码，当条件为 false 时执行其他代码
    if...else if....else 语句 - 使用该语句来选择多个代码块之一来执行
    switch 语句 - 使用该语句来选择多个代码块之一来执行
    for - 循环代码块一定的次数
    for/in - 循环遍历对象的属性
    while - 当指定的条件为 true 时循环指定的代码块
    do/while - 同样当指定的条件为 true 时循环指定的代码块
    break 语句用于跳出循环。break 语句（不带标签引用），只能用在循环或 switch 中。
    continue 用于跳过循环中的一个迭代。continue 语句（带有或不带标签引用）只能用在循环中。
    通过标签引用，break 语句可用于跳出任何 JavaScript 代码块:break list;
JavaScript 错误 - Throw、Try 和 Catch
    try 语句测试代码块的错误。
    catch 语句处理错误。
    throw 语句创建自定义错误。

JavaScript 表单验证
    自定义验证 null、email等等;
