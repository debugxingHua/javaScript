JSON：JavaScript 对象表示法（JavaScript Object Notation）。
JSON 是存储和交换文本信息的语法。类似 XML。
JSON 比 XML 更小、更快，更易解析。
什么是 JSON ？
    JSON 指的是 JavaScript 对象表示法（JavaScript Object Notation）
    JSON 是轻量级的文本数据交换格式
    JSON 独立于语言 *
    JSON 具有自我描述性，更易理解
    JSON 使用 JavaScript 语法来描述数据对象，但是 JSON 仍然独立于语言和平台。JSON 解析器和 JSON 库支持许多不同的编程语言。
    JSON 是纯文本
    JSON 具有“自我描述性”（人类可读）
    JSON 具有层级结构（值中存在值）
    JSON 可通过 JavaScript 进行解析
    JSON 数据可使用 AJAX 进行传输
    没有结束标签
    更短
    读写的速度更快
    能够使用内建的 JavaScript eval() 方法进行解析
    使用数组
    不使用保留字
JSON - 转换为 JavaScript 对象
    JSON 文本格式在语法上与创建 JavaScript 对象的代码相同。
    由于这种相似性，无需解析器，JavaScript 程序能够使用内建的 eval() 函数，用 JSON 数据来生成原生的 JavaScript 对象。
    用 eval() 处理 JSON 字符串
把 JSON 文本转换为 JavaScript 对象
    由于 JSON 语法是 JavaScript 语法的子集，JavaScript 函数 eval() 可用于将 JSON 文本转换为 JavaScript 对象。
    eval() 函数使用的是 JavaScript 编译器，可解析 JSON 文本，然后生成 JavaScript 对象。必须把文本包围在括号中，这样才能避免语法错误：
    var obj = eval ("(" + txt + ")");

JSON 语法是 JavaScript 语法的子集。
    数据在名称/值对中
    数据由逗号分隔
    花括号保存对象
    方括号保存数组

JSON 数组
JSON 数组在方括号中书写：

数组可包含多个对象：
    {
        "employees": [
            { "firstName":"John" , "lastName":"Doe" },
            { "firstName":"Anna" , "lastName":"Smith" },
            { "firstName":"Peter" , "lastName":"Jones" }
        ]
    }
JSON 文件
    JSON 文件的文件类型是 ".json"
    JSON 文本的 MIME 类型是 "application/json"

JSON 解析器
    eval()不安全，所以JSON.parse(txt)更好;
